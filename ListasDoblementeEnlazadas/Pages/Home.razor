@page "/"
@using ListasDoblementeEnlazadas.DTO
@using ListasDoblementeEnlazadas.Services
@using System.Text

<PageTitle>Video Player</PageTitle>

<div class="d-flex justify-content-center mb-4" style="background-color: lightgray;">
    <iframe src="@youtubeId" width="75%" height="500" frameborder="10" allowfullscreen></iframe>
</div>

<div class="row mb-4 justify-content-center">
    <div class="col-lg-8">
        <div class="d-flex justify-content-center">
            <button @onclick="First" type="button" class="btn btn-outline-primary"><i class="bi bi-chevron-double-left"></i> Primero</button>
            <button @onclick="Before" type="button" class="btn btn-outline-primary"><i class="bi bi-chevron-left"></i> Anterior</button>
            <button @onclick="Next" type="button" class="btn btn-outline-primary">Siguiente <i class="bi bi-chevron-right"></i></button>
            <button @onclick="Last" type="button" class="btn btn-outline-primary">Último <i class="bi bi-chevron-double-right"></i></button>
        </div>
    </div>
</div>

<p>@mensaje</p>

<div class="d-flex justify-content-center">
    <input type="text" class="form-control mb-2" placeholder="https://" @bind-value="youtubeLink" />
    <div class="input-group-append">
        <div class="dropdown">
            <button class="btn btn-success dropdown-toggle" type="button" id="saveDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Opciones Para Guardar
            </button>
            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="saveDropdown">
                <button class="dropdown-item" @onclick="AddToTop">Agregar Video Al Inicio</button>
                <div class="dropdown-divider"></div>
                <button class="dropdown-item" @onclick="AddToEnd">Agregar Video Al Final</button>
                <div class="dropdown-divider"></div>
                <input type="text" class="form-control" placeholder="Ingrese Link De Video X" @bind="videoX" />
                <button class="dropdown-item" @onclick="AddToBeforeVideoX">Agregar Video Antes de Video X</button>
                <button class="dropdown-item" @onclick="AddToAfterVideoX">Agregar Video Despues de Video X</button>
                <div class="dropdown-divider"></div>
                <input type="number" class="form-control" placeholder="Ingrese la ubicación específica" @bind="posicion" />
                <button class="dropdown-item" @onclick="AddInSpecificPosition">Agregar Video En Posicion Específica</button>
                <button class="dropdown-item" @onclick="AddBeforeSpecificPosition">Agregar Video Antes de Posición Específica</button>
                <button class="dropdown-item" @onclick="AddAfterSpecificPosition">Agregar Video Después de Posición Específica</button>
                <div class="dropdown-divider"></div>
                <input type="text" class="form-control" placeholder="Ingrese el Link Del Video A buscar" @bind="videoBuscar" />
                <button class="dropdown-item" @onclick="VideoSearch">Buscar Video</button>
            </div>
        </div>
    </div>
    <div class="input-group-append">
        <div class="dropdown">
            <button class="btn btn-danger dropdown-toggle" type="button" id="deleteDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Opciones Para Eliminar
            </button>
            <div class="dropdown-menu dropdown-menu-end" aria-labelledby="deleteDropdown">
                <button class="dropdown-item" @onclick="DeleteToTop">Eliminar Video Al Inicio</button>
                <div class="dropdown-divider"></div>
                <button class="dropdown-item" @onclick="DeleteInTheEnd">Eliminar Video Al Final</button>
                <div class="dropdown-divider"></div>
                <input type="text" class="form-control" placeholder="Ingrese Link De Video X" @bind="videoX" />
                <button class="dropdown-item" @onclick="DeleteBeforeVideoX">Elimnar Video Antes de Video X</button>
                <button class="dropdown-item" @onclick="DeleteAfterVideoX">Elimnar Video Despues de Video X</button>
                <div class="dropdown-divider"></div>
                <input type="number" class="form-control" placeholder="Ingrese la ubicación específica" @bind="posicion" />
                <button class="dropdown-item" @onclick="DeleteInSpecificPosition">Eliminar Video En Posicion Específica</button>
                <div class="dropdown-divider"></div>
                <button class="dropdown-item" @onclick="SortTheListAZ">Ordenar Lista Por Link A-Z Ascendente</button>
                <button class="dropdown-item" @onclick="SortTheListZA">Ordenar Lista Por Link Z-A Descendente</button>
            </div>
        </div>
    </div>
    <button @onclick="ToggleList" class="btn btn-primary ml-2" style="width: 300px; height: 38px;">
        @(!mostrarLista ? "Mostrar Lista" : "Ocultar Lista")
    </button>
</div>

@if (mostrarLista)
{
    <ul class="list-group list-group-numbered">
        @if (!string.IsNullOrEmpty(ObtenerListaRecursiva()))
        {
            @foreach (var item in ObtenerListaRecursiva().Split('\n', StringSplitOptions.RemoveEmptyEntries))
            {
                <li class="list-group-item">@item</li>
            }
        }
    </ul>
}

@code {
    ListasDoblementeEnlazadas lista;

    string youtubeLink = string.Empty;
    string youtubeId = string.Empty;
    string mensaje = string.Empty;
    public string videoX { get; set; }
    public int posicion { get; set; }
    public string videoBuscar { get; set; }
    bool mostrarLista = false;

    protected override void OnInitialized()
    {
        lista = new ListasDoblementeEnlazadas();
    }

    private void ToggleList()
    {
        mostrarLista = !mostrarLista;
    }

    private string GetVideoId(string link)
    {
        var uri = new Uri(link);
        var query = uri.Query;
        var queryParams = System.Web.HttpUtility.ParseQueryString(query);
        var videoId = queryParams["v"];
        return videoId;
    }

    public void PlayVideo()
    {
        if (lista.nodoActual is not null)
        {
            youtubeLink = lista.nodoActual.informacion;

            var videoId = GetVideoId(youtubeLink);

            if (!string.IsNullOrEmpty(videoId))
            {
                youtubeId = $"https://www.youtube.com/embed/{videoId}";
            }
        }
    }

    void AddToTop()
    {
        var nuevoNodo = new Nodo(youtubeLink);
        mensaje = lista.AgregarNodoAlInicio(nuevoNodo);
        PlayVideo();
        youtubeLink = string.Empty;
    }

    //Ana Raquel
    void AddToEnd()
    {
        var nuevoNodo = new Nodo(youtubeLink);
        mensaje = lista.AddToEnd(nuevoNodo);
        PlayVideo(); 
        youtubeLink = string.Empty; 
    }

    //Wilmer
    void AddToBeforeVideoX()
    {
        Nodo nuevoNodo = new Nodo(youtubeLink);
        mensaje = lista.AddBeforeVideoX(videoX, nuevoNodo);
        PlayVideo();
        youtubeLink = string.Empty;
    }

    //José Miguel
    void AddToAfterVideoX()
    {
        /*Nodo nuevoNodo = new Nodo(youtubeLink);
        mensaje = lista.AddToAfterVideoX(videoX, nuevoNodo);
        PlayVideo();
        youtubeLink = string.Empty;*/


    }

    //José Miguel
    void AddInSpecificPosition()
    {
        /*Nodo nuevoNodo = new Nodo(youtubeLink);
        mensaje = lista.AddInSpecificPosition(posicion, nuevoNodo);
        PlayVideo();
        youtubeLink = string.Empty;*/

    }

    //Ana Raquel
    void AddBeforeSpecificPosition()
    {
        var nuevoNodo = new Nodo(youtubeLink); 
        mensaje = lista.AddBeforeSpecificPosition(posicion, nuevoNodo);
        PlayVideo();
        youtubeLink = string.Empty;
        posicion = 0;
    }

    //Ana Rocío
    void AddAfterSpecificPosition()
    {
        Nodo nuevoNodo = new Nodo(youtubeLink);

        if (posicion < 0)
        {
            mensaje = "La ubicación específica debe ser un número positivo.";
        }
        else
        {
            mensaje = lista.AddAfterSpecificPosition(posicion, nuevoNodo);
            PlayVideo();
        }
        youtubeLink  = string.Empty;
        posicion = 0;

    }

    //Ana Rocío
    void VideoSearch()
    {

    }

    //Ana Raquel
    void DeleteToTop()
    {
        mensaje = lista.DeleteToTop();
        PlayVideo();
        youtubeLink = string.Empty;
    }

    //Ana Rocío
    void DeleteInTheEnd()
    {
        mensaje = lista.EliminarNodoAlFinal();

    }

    //Jorge Leonardo
    void DeleteBeforeVideoX()
    {
        Nodo nodoActual = lista.primerNodo;
        Nodo nodoAnterior = null;

        while (nodoActual != null)
        {
            if (nodoActual.ligaAnterior != null && nodoActual.ligaAnterior.informacion == videoX)
            {
                Nodo nodoEliminar = nodoActual;

                if (nodoActual == lista.nodoActual)
                {
                    lista.nodoActual = nodoEliminar;
                }

                nodoActual.ligaSiguiente.ligaAnterior = nodoActual.ligaAnterior;
                nodoActual.ligaAnterior.ligaSiguiente = nodoActual.ligaSiguiente;

                lista.EliminarNodo(nodoEliminar);

                break;
            }

            nodoAnterior = nodoActual;
            nodoActual = nodoActual.ligaSiguiente;
        }

        mensaje = "Se ha eliminado el nodo antes de " + videoX;

    }

    //Jorge Leonardo
    void DeleteAfterVideoX()
    {
        Nodo nodoActual = lista.primerNodo;

        while (nodoActual != null)
        {
            if (nodoActual.informacion == videoX && nodoActual.ligaSiguiente != null)
            {
                Nodo nodoEliminar = nodoActual.ligaSiguiente;

                if (nodoEliminar == lista.nodoActual)
                {
                    lista.nodoActual = nodoEliminar.ligaSiguiente;
                }

                if (nodoEliminar == lista.ultimoNodo)
                {
                    lista.ultimoNodo = nodoActual;
                }

                nodoActual.ligaSiguiente = nodoEliminar.ligaSiguiente;

                lista.EliminarNodo(nodoEliminar);

                mensaje = "Se ha eliminado el nodo después de " + videoX;

                break;
            }

            nodoActual = nodoActual.ligaSiguiente;
        }
    }

    //Jorge Leonardo
    void DeleteInSpecificPosition()
    {
        if (posicion <= 0)
        {
            mensaje = "La posición específica debe ser un número positivo.";
            return;
        }

        mensaje = lista.DeleteInSpecificPosition(posicion);
        PlayVideo();
        posicion = 0;
    }

    //Wilmer
    void SortTheListAZ()
    {

    }

    //Wilmer
    void SortTheListZA()
    {

    }

    void First()
    {
        lista.nodoActual = lista.primerNodo;
        PlayVideo();
    }

    void Before()
    {
        lista.Anterior();
        PlayVideo();
    }

    void Next()
    {
        lista.Siguiente();
        PlayVideo();
    }

    void Last()
    {
        lista.nodoActual = lista.ultimoNodo;
        PlayVideo();
    }

    public string ObtenerListaRecursiva()
    {
        StringBuilder sb = new StringBuilder();
        RecorrerRecursivo(lista.primerNodo, sb);
        return sb.ToString();
    }

    void RecorrerRecursivo(Nodo nodoActual, StringBuilder sb)
    {
        if (nodoActual != null)
        {
            sb.AppendLine(nodoActual.informacion);
            RecorrerRecursivo(nodoActual.ligaSiguiente, sb);
        }
    }

}